{"ast":null,"code":"var _jsxFileName = \"/Users/sreedharperim/Aditi/Sem-5/Classroom/gclass_fullstack_final_v5_full/frontend/src/components/CalendarView.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/CalendarView.js\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport API from '../api';\n\n/**\n * CalendarView\n * Props:\n *  - classId (required) : id of the class to show assignments for\n *  - onEventClick (optional) : function(eventObj) when an event is clicked\n *\n * Renders a FullCalendar view populated with assignments from:\n *   GET /api/assignments/class/:classId\n *\n * Each assignment becomes an event with:\n *  - title: assignment title\n *  - start: due_date (or created_at if missing)\n *  - extendedProps: contains original assignment object\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarView({\n  classId,\n  onEventClick\n}) {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (!classId) return;\n    setLoading(true);\n\n    // Fetch assignments for class (backend filters what the current user can see)\n    API.get(`/assignments/class/${classId}`).then(res => {\n      const assignments = res.data || [];\n      const evts = assignments\n      // .filter(a => a.due_date) // only show those with due dates; comment out to include all\n      .map(a => ({\n        id: String(a.id),\n        title: a.title,\n        start: a.due_date,\n        allDay: false,\n        extendedProps: a,\n        backgroundColor: '#1A73E8',\n        borderColor: '#1558b0',\n        textColor: '#fff'\n      }));\n      setEvents(evts);\n    }).catch(err => {\n      console.error('Calendar fetch failed', err);\n      setEvents([]);\n    }).finally(() => setLoading(false));\n  }, [classId]);\n  function handleEventClick(clickInfo) {\n    const appt = clickInfo.event.extendedProps;\n    if (onEventClick) onEventClick(appt);else {\n      var _clickInfo$event$star;\n      // default: show a small native dialog (fallback)\n      alert(`${clickInfo.event.title}\\nDue: ${(_clickInfo$event$star = clickInfo.event.start) === null || _clickInfo$event$star === void 0 ? void 0 : _clickInfo$event$star.toLocaleString()}\\n\\n${appt.description || ''}`);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: 360\n    },\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: \"Loading calendar\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n      plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n      initialView: \"dayGridMonth\",\n      headerToolbar: {\n        left: 'prev,next today',\n        center: 'title',\n        right: 'dayGridMonth,timeGridWeek,timeGridDay'\n      },\n      weekends: true,\n      events: events,\n      eventClick: handleEventClick,\n      height: \"auto\",\n      dayMaxEvents: 3,\n      themeSystem: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarView, \"+npp09ZlhZYCuFMbAhFP+QaH6MU=\");\n_c = CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","API","jsxDEV","_jsxDEV","CalendarView","classId","onEventClick","_s","events","setEvents","loading","setLoading","get","then","res","assignments","data","evts","map","a","id","String","title","start","due_date","allDay","extendedProps","backgroundColor","borderColor","textColor","catch","err","console","error","finally","handleEventClick","clickInfo","appt","event","_clickInfo$event$star","alert","toLocaleString","description","style","minHeight","children","className","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","headerToolbar","left","center","right","weekends","eventClick","height","dayMaxEvents","themeSystem","_c","$RefreshReg$"],"sources":["/Users/sreedharperim/Aditi/Sem-5/Classroom/gclass_fullstack_final_v5_full/frontend/src/components/CalendarView.js"],"sourcesContent":["// frontend/src/components/CalendarView.js\nimport React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport API from '../api';\n\n/**\n * CalendarView\n * Props:\n *  - classId (required) : id of the class to show assignments for\n *  - onEventClick (optional) : function(eventObj) when an event is clicked\n *\n * Renders a FullCalendar view populated with assignments from:\n *   GET /api/assignments/class/:classId\n *\n * Each assignment becomes an event with:\n *  - title: assignment title\n *  - start: due_date (or created_at if missing)\n *  - extendedProps: contains original assignment object\n */\nexport default function CalendarView({ classId, onEventClick }) {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (!classId) return;\n    setLoading(true);\n\n    // Fetch assignments for class (backend filters what the current user can see)\n    API.get(`/assignments/class/${classId}`)\n      .then(res => {\n        const assignments = res.data || [];\n        const evts = assignments\n          // .filter(a => a.due_date) // only show those with due dates; comment out to include all\n          .map(a => ({\n            id: String(a.id),\n            title: a.title,\n            start: a.due_date,\n            allDay: false,\n            extendedProps: a,\n            backgroundColor: '#1A73E8',\n            borderColor: '#1558b0',\n            textColor: '#fff'\n          }));\n        setEvents(evts);\n      })\n      .catch(err => {\n        console.error('Calendar fetch failed', err);\n        setEvents([]);\n      })\n      .finally(() => setLoading(false));\n  }, [classId]);\n\n  function handleEventClick(clickInfo) {\n    const appt = clickInfo.event.extendedProps;\n    if (onEventClick) onEventClick(appt);\n    else {\n      // default: show a small native dialog (fallback)\n      alert(`${clickInfo.event.title}\\nDue: ${clickInfo.event.start?.toLocaleString()}\\n\\n${appt.description || ''}`);\n    }\n  }\n\n  return (\n    <div style={{ minHeight: 360 }}>\n      {loading && <div className=\"card\">Loading calendarâ€¦</div>}\n      <FullCalendar\n        plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n        initialView=\"dayGridMonth\"\n        headerToolbar={{\n          left: 'prev,next today',\n          center: 'title',\n          right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        }}\n        weekends={true}\n        events={events}\n        eventClick={handleEventClick}\n        height=\"auto\"\n        dayMaxEvents={3}\n        themeSystem=\"standard\"\n      />\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}